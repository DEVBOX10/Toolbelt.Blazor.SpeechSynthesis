@using Toolbelt.Blazor.SpeechSynthesis
@inject SpeechSynthesis SpeechSynthesis;

<p>
    <select bind="@CurrentVoiceURI">
        @foreach (var voice in Voices)
        {
            <option value="@voice.VoiceURI">@voice.Name (@voice.VoiceURI)</option>
        }
    </select>
</p>

<p>
    <textarea bind="@Text"></textarea>
</p>
<p>
    <button onclick="@onClickSpeakButton">Speak</button>
    <button onclick="@onClickPauseButton">Pause</button>
    <button onclick="@onClickResumeButton">Resume</button>
    <button onclick="@onClickCancelButton">Cancel</button>
</p>

@functions
{
    string Text = "Hello World.";

    IEnumerable<SpeechSynthesisVoice> Voices = new SpeechSynthesisVoice[0];

    SpeechSynthesisVoice CurrentVoice;

    public string CurrentVoiceURI
    {
        get { return this.CurrentVoice?.VoiceURI; }
        set { this.CurrentVoice = this.Voices.FirstOrDefault(v => v.VoiceURI == value); }
    }

    protected async override Task OnInitAsync()
    {
        this.Voices = await this.SpeechSynthesis.GetVoicesAsync();
        this.CurrentVoice = this.Voices.FirstOrDefault(v => v.Default);
    }

    void onClickSpeakButton()
    {
        //this.SpeechSynthesis.Speak(this.Text);
        var utterancet = new SpeechSynthesisUtterance
        {
            Text = this.Text,
            //Lang = "ja-JP",
            Pitch = 1.0,
            Rate = 0.5,
            Volume = 1,
            Voice = this.CurrentVoice
        };
        utterancet.Start += OnStart;
        utterancet.Boundary += OnBoundary;
        utterancet.Mark += OnMark;
        utterancet.Pause += OnPause;
        utterancet.Resume += OnResume;
        utterancet.End += OnEnd;
        utterancet.Error += OnError;
        this.SpeechSynthesis.Speak(utterancet);
    }

    void onClickPauseButton()
    {
        Console.WriteLine("onClickPauseButton");
        Console.WriteLine($"Speaking is [{this.SpeechSynthesis.Speaking}]");
        if (this.SpeechSynthesis.Speaking)
        {
            this.SpeechSynthesis.Pause();
        }
    }

    void onClickResumeButton()
    {
        Console.WriteLine("onClickResumeButton");
        Console.WriteLine($"Paused is [{this.SpeechSynthesis.Paused}]");
        if (this.SpeechSynthesis.Paused)
        {
            this.SpeechSynthesis.Resume();
        }
    }

    void onClickCancelButton()
    {
        this.SpeechSynthesis.Cancel();
    }

    void OnStart(object sender, EventArgs args) { Console.WriteLine("ON START!"); }
    void OnBoundary(object sender, EventArgs args) { Console.WriteLine("ON BOUNDARY!"); }
    void OnMark(object sender, EventArgs args) { Console.WriteLine("ON MARK!"); }
    void OnPause(object sender, EventArgs args) { Console.WriteLine("ON PAUSE!"); }
    void OnResume(object sender, EventArgs args) { Console.WriteLine("ON RESUME!"); }
    void OnEnd(object sender, EventArgs args) { Console.WriteLine("ON END!"); }
    void OnError(object sender, EventArgs args) { Console.WriteLine("ON ERROR!"); }
}